{"version":3,"sources":["hooks/useInput.js","utils/regex.js","utils/storage/index.js","pages/Signup.js","styles/styles.js","styles/InputWrapper.js","components/SignInForm.js","components/SignIn.js","components/CardNumber.js","components/Address.js","components/SignUp.js","components/AccountButton.js","utils/config.js","components/Pagination.js","utils/getTotalPageNum.js","styles/icons/SearchIcon.js","components/SearchBox.js","components/TableData.js","components/UserTable.js","utils/currentUsers.js","components/Graph.js","components/Navbar.js","pages/Login.js","styles/layouts.js","styles/GlobalStyles.js","pages/User.js","pages/Admin.js","Routes.js","App.js","index.js"],"names":["initValue","validator","useState","value","setValue","onChange","event","target","willUpdate","REGEXP","validate","regExp","RegExp","test","tempGetStorage","keyward","JSON","parse","localStorage","getItem","withRouter","idStatus","setIdStatus","nameStatus","setNameStatus","passwordStatus","setPasswordStatus","id","useInput","length","password","name","age","address","cardNumber","userType","history","useHistory","useEffect","onSubmit","e","preventDefault","newUserinfo","Object","values","every","property","key","Storage","prevStored","obj","assign","storeArray","propVal","i","k","CheckPropDoup","push","setItem","stringify","saveStore","alert","htmlFor","type","placeholder","color","fontSize","size","InputWrapper","styled","div","props","double","marginR","SignInForm","isSignInFormOpen","TextContainer","SignIn","setIsSignInFormOpen","Container","ButtonLogin","onClick","section","button","ModalWrapper","visible","ModalOverlay","ModalInner","ModalInputWrapper","ModalSubmit","CardNumber","cardNumberRef","useRef","modalVisible","setModalVisible","closeModal","currentTarget","a","current","childNodes","map","node","join","handleKeyUp","num","max","getAttribute","nextElementSibling","focus","readOnly","tabIndex","className","ref","onKeyUp","maxLength","Address","window","daum","Postcode","oncomplete","data","res","userSelectedType","roadAddress","jibunAddress","open","SignUp","TermWrapper","href","ButtonSubmit","Button","AccountButton","content","GET_USER_STORAGE_KEYWORD","PaginationContainer","PageUl","ul","PageLi","li","active","Pagination","totalDataNum","paginate","currentPage","pageLists","setPageLists","totalPageNum","useMemo","totalUserData","DataPerPage","Math","ceil","totalPageList","Array","from","v","displayedPageList","slice","goEdgePage","useCallback","edgePage","goNextToPage","nextToPage","number","AccountSearchIcon","xmlns","width","height","viewBox","d","fill","fillRule","stroke","strokeWidth","SearchBoxContainer","SearchButton","SearchInput","input","SearchBox","setUserData","copiedData","inputValue","setInputValue","onInputValue","word","valueLen","filterdData","filter","substring","SearchIcon","TableData","TableContainer","table","UserTable","userData","currentUserData","setCurrentUserData","setCurrentPage","firstIndex","setFirstIndex","lastIndex","setLastIndex","nextLastIndex","nextFirstIndex","indexOfFirst","indexOfLast","Title","h1","Graph","NavWrap","nav","NavContainer","NavContent","LogoImg","img","attrs","src","MenuList","Menu","Account","Navbar","user","menu","Login","Logo","layouts","Wrap","Body","body","Section","Aside","aside","AccountButtonBox","GlobalStyles","createGlobalStyle","reset","User","menuList","sideMenu","Sidebar","Admin","setCopiedData","Routes","exact","path","component","Signup","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe6558a8.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function (initValue, validator) {\r\n  const [value, setValue] = useState(initValue);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    let willUpdate = true;\r\n    if (typeof validator === 'function') {\r\n      willUpdate = validator(value);\r\n    }\r\n    if (willUpdate) {\r\n      setValue(value);\r\n    }\r\n  };\r\n  return { value, onChange };\r\n}\r\n","export const REGEXP = {\r\n  idRegExp: /^[a-zA-Z0-9]{4,12}$/,\r\n  passwordRegExp: /^[a-zA-Z0-9]{4,16}$/,\r\n  nameRegExp: /^[가-힣]{2,4}$/,\r\n};\r\n\r\nexport const validate = (value, regExp) => {\r\n  const reg = new RegExp(regExp);\r\n  return reg.test(value);\r\n};\r\n\r\n// export function validate(values) {\r\n//   let errors = {};\r\n//   if (!values.email) {\r\n//     errors.email = 'Email address is required';\r\n//   } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n//     errors.email = 'Email address is invalid';\r\n//   }\r\n//   if (!values.password) {\r\n//     errors.password = 'Password is required';\r\n//   } else if (values.password.length < 8) {\r\n//     errors.password = 'Password must be 8 or more characters';\r\n//   }\r\n//   return errors;\r\n// }\r\n","import mockData from 'utils/usersData';\r\n\r\n// LocalStorage 함수 사용시 keyword 는 config.js 안에 있는 STORAGE.DATA 통해서 설정\r\nexport const setLocalStorage = (keyword, data) => {\r\n  localStorage.removeItem(keyword);\r\n  localStorage.setItem(keyword, JSON.stringify(data));\r\n};\r\n\r\nexport const getLocalStorage = (keyword) => {\r\n  const storageData = JSON.parse(localStorage.getItem(keyword)) || mockData;\r\n\r\n  return storageData;\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\n// 임시 스토리지 관련 함수입니다.\r\nexport const tempGetStorage = (keyward) => {\r\n  const storage = JSON.parse(localStorage.getItem(`${keyward}`));\r\n\r\n  return storage;\r\n};\r\n\r\nexport const tempSetStorage = () => {\r\n  localStorage.setItem(\r\n    'data',\r\n    JSON.stringify([\r\n      {\r\n        id: 'admin',\r\n        password: 'admin123',\r\n        name: '강리자',\r\n        age: 36,\r\n        address: '서울시 강남구',\r\n        cardNumber: '5222-1224-1224-1224',\r\n        userType: 'admin',\r\n      },\r\n      {\r\n        id: 'jin66',\r\n        password: '1234',\r\n        name: '장명진',\r\n        age: 41,\r\n        address: '울릉군 독도리',\r\n        cardNumber: '4111-1111-1111-1111',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 'sonisthebest00',\r\n        password: 'son6876',\r\n        name: '손홍민',\r\n        age: 29,\r\n        address: '옹진군 백령면',\r\n        cardNumber: '6111-2444-2444-2444',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 'hamonica22',\r\n        password: 'monana009',\r\n        name: '모니카',\r\n        age: 33,\r\n        address: '뉴욕시 맨해튼구',\r\n        cardNumber: '5112-1443-1443-1443',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 'chaboom33',\r\n        password: 'bkc123333',\r\n        name: '차범근',\r\n        age: 68,\r\n        address: '서울시 종로구',\r\n        cardNumber: '6611-2114-2114-2114',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 'bpjenny82',\r\n        password: 'jen82bp',\r\n        name: '김제니',\r\n        age: 25,\r\n        address: '서울시 용산구',\r\n        cardNumber: '3112-6614-6614-6614',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 'kdb12345',\r\n        password: '1234kdb',\r\n        name: '강도범',\r\n        age: 51,\r\n        address: '부산시 해운대구',\r\n        cardNumber: '9111-6111-6111-6111',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 'ouch123',\r\n        password: '123ochch',\r\n        name: '엄어나',\r\n        age: 45,\r\n        address: '군산시 옥서면',\r\n        cardNumber: '9111-6111-6111-6111',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 'attack199',\r\n        password: 'naasdd123',\r\n        name: '어택',\r\n        age: 38,\r\n        address: '서귀포시 중문동',\r\n        cardNumber: '7221-1123-1123-1123',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 'presidentKim12',\r\n        password: 'iamking22',\r\n        name: '김정은',\r\n        age: 37,\r\n        address: '평양시 혁신동',\r\n        cardNumber: '1111-0000-0000-0000',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 1,\r\n        password: '1234',\r\n        name: '김동원',\r\n        age: 25,\r\n        address: '서울시 강동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 2,\r\n        password: '1234',\r\n        name: '김참치',\r\n        age: 26,\r\n        address: '서울시 강남구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 3,\r\n        password: '1234',\r\n        name: '김마요',\r\n        age: 27,\r\n        address: '서울시 송파구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 4,\r\n        password: '1234',\r\n        name: '원티드',\r\n        age: 29,\r\n        address: '서울시 서초구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 5,\r\n        password: '1234',\r\n        name: '위코드',\r\n        age: 28,\r\n        address: '서울시 성동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 6,\r\n        password: '1234',\r\n        name: '임팩트',\r\n        age: 24,\r\n        address: '서울시 광진구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 7,\r\n        password: '1234',\r\n        name: '김동원',\r\n        age: 25,\r\n        address: '서울시 강동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 8,\r\n        password: '1234',\r\n        name: '김참치',\r\n        age: 26,\r\n        address: '서울시 강남구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 9,\r\n        password: '1234',\r\n        name: '김마요',\r\n        age: 27,\r\n        address: '서울시 송파구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 10,\r\n        password: '1234',\r\n        name: '원티드',\r\n        age: 29,\r\n        address: '서울시 서초구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 11,\r\n        password: '1234',\r\n        name: '위코드',\r\n        age: 28,\r\n        address: '서울시 성동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 12,\r\n        password: '1234',\r\n        name: '임팩트',\r\n        age: 24,\r\n        address: '서울시 광진구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 13,\r\n        password: '1234',\r\n        name: '김동원',\r\n        age: 25,\r\n        address: '서울시 강동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 14,\r\n        password: '1234',\r\n        name: '김참치',\r\n        age: 26,\r\n        address: '서울시 강남구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 15,\r\n        password: '1234',\r\n        name: '김마요',\r\n        age: 27,\r\n        address: '서울시 송파구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 16,\r\n        password: '1234',\r\n        name: '원티드',\r\n        age: 29,\r\n        address: '서울시 서초구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 17,\r\n        password: '1234',\r\n        name: '위코드',\r\n        age: 28,\r\n        address: '서울시 성동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 18,\r\n        password: '1234',\r\n        name: '임팩트',\r\n        age: 24,\r\n        address: '서울시 광진구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 19,\r\n        password: '1234',\r\n        name: '김동원',\r\n        age: 25,\r\n        address: '서울시 강동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 20,\r\n        password: '1234',\r\n        name: '김참치',\r\n        age: 26,\r\n        address: '서울시 강남구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 21,\r\n        password: '1234',\r\n        name: '김마요',\r\n        age: 27,\r\n        address: '서울시 송파구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 22,\r\n        password: '1234',\r\n        name: '원티드',\r\n        age: 29,\r\n        address: '서울시 서초구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 23,\r\n        password: '1234',\r\n        name: '위코드',\r\n        age: 28,\r\n        address: '서울시 성동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 24,\r\n        password: '1234',\r\n        name: '임팩트',\r\n        age: 24,\r\n        address: '서울시 광진구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 25,\r\n        password: '1234',\r\n        name: '김동원',\r\n        age: 25,\r\n        address: '서울시 강동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 26,\r\n        password: '1234',\r\n        name: '김참치',\r\n        age: 26,\r\n        address: '서울시 강남구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 27,\r\n        password: '1234',\r\n        name: '김마요',\r\n        age: 27,\r\n        address: '서울시 송파구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 28,\r\n        password: '1234',\r\n        name: '원티드',\r\n        age: 29,\r\n        address: '서울시 서초구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n      {\r\n        id: 29,\r\n        password: '1234',\r\n        name: '위코드',\r\n        age: 28,\r\n        address: '서울시 성동구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'parent',\r\n      },\r\n      {\r\n        id: 30,\r\n        password: '1234',\r\n        name: '임팩트',\r\n        age: 24,\r\n        address: '서울시 광진구',\r\n        cardNumber: '0000-1111-2222-3333',\r\n        userType: 'teacher',\r\n      },\r\n    ]),\r\n  );\r\n};\r\n\r\n// 스토리지 관련 임시 함수\r\nexport function CheckPropDoup(storeArray, propVal) {\r\n  for (let i = 0, k = storeArray.length; i < k; i += 1) {\r\n    if (storeArray[i] === propVal) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function saveStore(key, value) {\r\n  if (typeof Storage !== 'undefined') {\r\n    const prevStored = JSON.parse(localStorage.getItem(key)) || [];\r\n    let obj = {};\r\n    obj = Object.assign(obj, value);\r\n    if (!CheckPropDoup(prevStored, value)) prevStored.push(obj);\r\n    localStorage.setItem(key, JSON.stringify(prevStored));\r\n  }\r\n}\r\n\r\nexport function getStore(key) {\r\n  if (typeof Storage !== 'undefined') {\r\n    return JSON.parse(localStorage.getItem(key)) || [];\r\n  }\r\n}\r\n\r\nexport function removeStore(key, value) {\r\n  if (typeof Storage !== 'undefined') {\r\n    const prevStored = JSON.parse(localStorage.getItem(key)) || [];\r\n    prevStored.splice(prevStored.indexOf(value), 1);\r\n    localStorage.setItem(key, JSON.stringify(prevStored));\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport useInput from 'hooks/useInput';\r\nimport { REGEXP, validate } from 'utils/regex';\r\nimport { getStore, saveStore } from 'utils/storage/index';\r\n\r\nfunction Signup() {\r\n  const [idStatus, setIdStatus] = useState('');\r\n  const [nameStatus, setNameStatus] = useState('');\r\n  const [passwordStatus, setPasswordStatus] = useState('');\r\n\r\n  const id = useInput('', (value) => value.length <= 12);\r\n  const password = useInput('', (value) => value.length <= 16);\r\n  // const checkingPassword = useInput('');\r\n  const name = useInput('', (value) => value.length <= 4);\r\n  const age = useInput(0);\r\n  const address = useInput('');\r\n  const cardNumber = useInput('');\r\n  const userType = useInput('parent');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!validate(id.value, REGEXP.idRegExp)) {\r\n      setIdStatus('ID는 4~12자의 영문 대소문자와 숫자로만 입력하여 주세요.');\r\n    } else {\r\n      setIdStatus('적절한 ID입니다.');\r\n    }\r\n\r\n    if (!validate(password.value, REGEXP.passwordRegExp)) {\r\n      setPasswordStatus('비밀번호는 4~16자의 영문 대소문자와 숫자로만 입력하여 주세요.');\r\n    } else if (id.value === password.value) {\r\n      setPasswordStatus('비밀번호는 아이디와 같을 수 없습니다.');\r\n    } else {\r\n      setPasswordStatus('적절한 비밀번호입니다.');\r\n    }\r\n\r\n    if (!validate(name.value, REGEXP.nameRegExp)) {\r\n      setNameStatus('이름은 한글로 2~4자로 입력하여 주세요.');\r\n    } else {\r\n      setNameStatus('적절한 이름입니다.');\r\n    }\r\n  }, [id, password, name]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUserinfo = {\r\n      id: id.value,\r\n      password: password.value,\r\n      name: name.value,\r\n      age: age.value,\r\n      address: address.value,\r\n      cardNumber: cardNumber.value,\r\n      userType: userType.value,\r\n    };\r\n\r\n    if (Object.values(newUserinfo).every((property) => property !== '')) {\r\n      saveStore('userList', newUserinfo);\r\n      alert('가입이 완료되었습니다!');\r\n      history.push('/login');\r\n    } else {\r\n      alert('가입 양식을 다시 확인해주세요.');\r\n    }\r\n  };\r\n\r\n  const checkDup = () => {\r\n    const userList = getStore('userList');\r\n    if (userList.every((storedUser) => storedUser.id !== id)) {\r\n      alert('가입 가능한 아이디입니다.');\r\n    } else {\r\n      alert('이미 가입된 아이디입니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>회원가입</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor='id'>\r\n          <h3>아이디</h3>\r\n          <input type='text' name='id' id='id' placeholder='아이디 입력' {...id} />\r\n        </label>\r\n        <div>{idStatus}</div>\r\n        <label htmlFor='password'>\r\n          <h3>비밀번호</h3>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            id='password'\r\n            placeholder='비밀번호 입력'\r\n            {...password}\r\n          />\r\n        </label>\r\n        <div>{passwordStatus}</div>\r\n        <label htmlFor='name'>\r\n          <h3>성명</h3>\r\n          <input type='text' name='name' id='name' placeholder='이름 입력' {...name} />\r\n        </label>\r\n        <div>{nameStatus}</div>\r\n        <label htmlFor='age'>\r\n          <h3>나이</h3>\r\n          <input type='number' name='age' id='age' {...age} />\r\n        </label>\r\n        <label htmlFor='address'>\r\n          <h3>주소</h3>\r\n          <input type='text' name='address' id='address' {...address} />\r\n        </label>\r\n        <label htmlFor='address'>\r\n          <h3>신용카드</h3>\r\n          <input type='text' name='cardNumber' id='cardNumber' {...cardNumber} />\r\n        </label>\r\n        <div>\r\n          <button type='submit'> 가입하기 </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","export const color = {\r\n  primary: '#9fe945',\r\n  primaryDarker: '#69d872',\r\n  primaryGradient: 'linear-gradient(to right bottom, #87bf43, #69d872)',\r\n  white: '#fff',\r\n  red: '#ff0000',\r\n  greyLighter: '#dedede',\r\n  greyDarker: '#666',\r\n};\r\n\r\nexport const fontSize = {\r\n  smaller: '.625rem', // 10px\r\n  small: '.875rem', // 14px\r\n  medium: '1rem', // 16px\r\n  large: '1.25rem', // 20px\r\n  larger: '2rem', // 32px\r\n};\r\n\r\nexport const size = {\r\n  micro: '1px',\r\n  smallest: '3px',\r\n  smaller: '6px',\r\n  small: '10px',\r\n  medium: '15px',\r\n  large: '20px',\r\n  larger: '30px',\r\n  largest: '60px',\r\n};\r\n","import styled from 'styled-components';\r\nimport { fontSize, size, color } from './styles';\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: inline-block;\r\n  width: ${(props) => (props.double ? 'calc(50% - 3px)' : '100%')};\r\n  text-align: start;\r\n  margin-right: ${(props) => props.marginR && size.smaller};\r\n  margin-bottom: ${size.medium};\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: ${size.medium} 0;\r\n    padding-left: ${size.medium};\r\n    border: ${size.micro} solid ${color.greyLighter};\r\n    border-radius: ${size.smallest};\r\n    font-size: ${fontSize.small};\r\n    color: ${color.greyDarker};\r\n    outline: none;\r\n\r\n    &:focus {\r\n      border-color: ${color.primary};\r\n    }\r\n  }\r\n\r\n  label {\r\n    font-size: ${fontSize.smaller};\r\n    cursor: pointer;\r\n    color: ${color.red};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { fontSize, size } from 'styles/styles';\r\nimport { InputWrapper } from 'styles/InputWrapper';\r\n\r\nconst SignInForm = ({ isSignInFormOpen }) => {\r\n  if (!isSignInFormOpen)\r\n    return (\r\n      <TextContainer>\r\n        <h3>이미 회원이신가요?</h3>\r\n        <p>\r\n          자란다는 현재 대한민국 4세~13세 450만명 아이들의 1/3의 시간을 책임지는 교육,돌봄 매칭\r\n          플랫폼입니다.\r\n          <br />\r\n          지금 자란다에 합류하세요.\r\n        </p>\r\n      </TextContainer>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <InputWrapper>\r\n        <input type='text' id='id' name='id' placeholder='아이디를 입력해주세요' />\r\n        {/* <label htmlFor='id'>아이디를 다시 확인해주세요.</label> */}\r\n      </InputWrapper>\r\n      <InputWrapper>\r\n        <input\r\n          type='password'\r\n          id='password'\r\n          name='password'\r\n          placeholder='비밀번호를 입력해주세요'\r\n        />\r\n        {/* <label htmlFor='id'>비밀번호가 일치하지 않습니다.</label> */}\r\n      </InputWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n\r\nconst TextContainer = styled.div`\r\n  width: 60%;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    font-size: ${fontSize.large};\r\n    font-weight: 600;\r\n    margin-bottom: ${size.larger};\r\n  }\r\n\r\n  p {\r\n    font-size: ${fontSize.medium};\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { color, fontSize, size } from 'styles/styles';\r\nimport SignInForm from './SignInForm';\r\n\r\nconst SignIn = () => {\r\n  const [isSignInFormOpen, setIsSignInFormOpen] = useState(false);\r\n  const handleSubmitLogin = (e) => {\r\n    e.preventDefault();\r\n    if (!isSignInFormOpen) return setIsSignInFormOpen(true);\r\n    // if form is open, validate login form and move to userPage, isSignInFormOpen to false\r\n  };\r\n\r\n  return (\r\n    <Container isSignInFormOpen={isSignInFormOpen}>\r\n      <form>\r\n        <SignInForm isSignInFormOpen={isSignInFormOpen} />\r\n        <ButtonLogin type='submit' onClick={handleSubmitLogin}>\r\n          <span>LOG IN</span>\r\n        </ButtonLogin>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n\r\nconst Container = styled.section`\r\n  flex-basis: 45%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${color.white};\r\n  background: ${color.primaryGradient};\r\n  clip-path: polygon(0 0, 100% 0, 90% 100%, 0 100%);\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: ${(props) => props.isSignInFormOpen && '50%'};\r\n  }\r\n`;\r\n\r\nconst ButtonLogin = styled.button`\r\n  background-color: inherit;\r\n  border: ${size.micro} solid ${color.white};\r\n  border-radius: ${size.smallest};\r\n  padding: ${size.medium} ${size.largest};\r\n  margin-top: ${size.larger};\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  span {\r\n    color: ${color.white};\r\n    font-size: ${fontSize.medium};\r\n    font-weight: 500;\r\n    transition: all 0.3s;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${color.white};\r\n    span {\r\n      color: ${color.primaryDarker};\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { color, fontSize, size } from 'styles/styles';\r\n\r\nfunction CardNumber(props) {\r\n  const { value, onChange } = props;\r\n  const cardNumberRef = useRef();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const openModal = () => {\r\n    setModalVisible(true);\r\n    onChange({ target: { value: '' } });\r\n  };\r\n  const closeModal = (e) => {\r\n    // 저장버튼을 눌렀을때\r\n    if (e.target !== e.currentTarget) {\r\n      const a = [...cardNumberRef.current.childNodes].map((node) => node.value);\r\n      onChange({ target: { value: a.join('-') } });\r\n    }\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onMaskClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      closeModal(e);\r\n    }\r\n  };\r\n  function handleKeyUp(e) {\r\n    const num = e.target;\r\n    const max = num.getAttribute('maxlength');\r\n\r\n    if (num.value.length >= max) {\r\n      num.nextElementSibling.focus();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='password'\r\n        onClick={openModal}\r\n        value={value}\r\n        placeholder='카드번호, 예) 1234-1234-1234-1234'\r\n        readOnly\r\n      />\r\n      <ModalOverlay visible={modalVisible} />\r\n      <ModalWrapper onClick={onMaskClick} tabIndex='-1' visible={modalVisible}>\r\n        <ModalInner tabIndex='0' className='modal-inner'>\r\n          <ModalInputWrapper ref={cardNumberRef}>\r\n            <input type='text' onKeyUp={handleKeyUp} maxLength='4' />\r\n            <input type='password' onKeyUp={handleKeyUp} maxLength='4' />\r\n            <input type='password' onKeyUp={handleKeyUp} maxLength='4' />\r\n            <input type='text' maxLength='4' />\r\n          </ModalInputWrapper>\r\n          <ModalSubmit type='button' onClick={closeModal}>\r\n            <span>저장</span>\r\n          </ModalSubmit>\r\n        </ModalInner>\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ModalWrapper = styled.div`\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`;\r\n\r\nconst ModalOverlay = styled.div`\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`;\r\n\r\nconst ModalInner = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 50%;\r\n  min-width: 480px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n`;\r\nconst ModalInputWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  input {\r\n    width: 4rem;\r\n    margin: 0 10px;\r\n    text-align: center;\r\n    padding-left: 0;\r\n  }\r\n`;\r\nconst ModalSubmit = styled.button`\r\n  padding: ${size.medium};\r\n  border-radius: ${size.smallest};\r\n  background-color: ${color.primary};\r\n  cursor: pointer;\r\n  span {\r\n    color: ${color.white};\r\n    font-size: ${fontSize.medium};\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport default CardNumber;\r\n","import React from 'react';\r\n\r\nconst Address = (props) => {\r\n  const { value } = props;\r\n  function fetchAddressApi() {\r\n    new window.daum.Postcode({\r\n      oncomplete(data) {\r\n        const res = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\r\n        props.onChange({ target: { value: res } });\r\n      },\r\n    }).open();\r\n  }\r\n  return (\r\n    <input\r\n      type='text'\r\n      value={value}\r\n      onClick={fetchAddressApi}\r\n      placeholder='주소를 입력해주세요'\r\n      readOnly\r\n    />\r\n  );\r\n};\r\nexport default Address;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AiOutlineCheck } from 'react-icons/ai';\r\nimport { color, fontSize, size } from 'styles/styles';\r\nimport { InputWrapper } from 'styles/InputWrapper';\r\nimport CardNumber from 'components/CardNumber';\r\nimport Address from 'components/Address';\r\nimport useInput from 'hooks/useInput';\r\n\r\nconst SignUp = () => {\r\n  // isError && <label>\r\n  // isError && change input border color to red\r\n  // isChecked svg color change\r\n\r\n  const address = useInput('');\r\n  const cardNumber = useInput('');\r\n  return (\r\n    <Container>\r\n      <h3>자란다 회원가입</h3>\r\n      <p>10초만에 가입하고 아이와 함께 할 선생님 정보를 받아보세요</p>\r\n      <form>\r\n        <InputWrapper>\r\n          <input type='text' id='id' name='id' placeholder='아이디를 입력해주세요' />\r\n          {/* <label htmlFor='id'>아이디를 다시 입력해주세요.</label> */}\r\n        </InputWrapper>\r\n\r\n        <InputWrapper double='true' marginR='true'>\r\n          <input\r\n            type='password'\r\n            id='password'\r\n            name='password'\r\n            placeholder='비밀번호를 입력해주세요'\r\n          />\r\n          {/* <label htmlFor='password'>비밀번호를 다시 입력해주세요.</label> */}\r\n        </InputWrapper>\r\n        <InputWrapper double='true'>\r\n          <input type='password' id='password-re' name='password-re' placeholder='비밀번호 확인' />\r\n          {/* <label htmlFor='password-re'>비밀번호가 일치하지 않습니다.</label> */}\r\n        </InputWrapper>\r\n\r\n        <InputWrapper double='true' marginR='true'>\r\n          <input type='text' id='name' name='name' placeholder='이름을 입력해주세요' />\r\n          {/* <label htmlFor='name'>이름을 다시 입력해주세요.</label> */}\r\n        </InputWrapper>\r\n        <InputWrapper double='true'>\r\n          <input type='text' id='age' name='age' placeholder='나이를 입력해주세요' />\r\n          {/* <label htmlFor='age'>not displaying</label> */}\r\n        </InputWrapper>\r\n        <InputWrapper>\r\n          {/* <input type='text' placeholder='주소를 입력해주세요' /> */}\r\n          <Address id='address' {...address} />\r\n        </InputWrapper>\r\n        <InputWrapper>\r\n          {/* <input type='text' placeholder='카드번호, 예) 1234-1234-1234-1234' /> */}\r\n          <CardNumber id='cardNumber' {...cardNumber} />\r\n        </InputWrapper>\r\n\r\n        <TermWrapper className='term'>\r\n          <input type='checkbox' id='term' />\r\n          <AiOutlineCheck />\r\n          <a href='https://media.tenor.com/images/78ecca5aa42d67bb4eced2eb2ea57bd3/tenor.gif'>\r\n            이용약관\r\n          </a>\r\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\r\n          <label htmlFor='term'>을 모두 읽었으며 이에 동의합니다.</label>\r\n        </TermWrapper>\r\n\r\n        <ButtonSubmit type='submit'>\r\n          <span>가입하기</span>\r\n        </ButtonSubmit>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n\r\nconst Container = styled.section`\r\n  flex-basis: 55%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${color.greyDarker};\r\n\r\n  h3 {\r\n    font-size: ${fontSize.large};\r\n    font-weight: 600;\r\n    margin-bottom: ${size.large};\r\n  }\r\n\r\n  p {\r\n    font-size: ${fontSize.medium};\r\n    margin-bottom: ${size.larger};\r\n  }\r\n\r\n  form {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst TermWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${size.larger};\r\n  font-size: ${fontSize.small};\r\n\r\n  input[type='checkbox'] {\r\n    display: none;\r\n  }\r\n\r\n  label {\r\n    cursor: pointer;\r\n  }\r\n\r\n  a {\r\n    color: ${color.primary};\r\n  }\r\n\r\n  svg {\r\n    /* on check, color change to primaryDarker */\r\n    color: ${color.greyLighter};\r\n    font-size: ${fontSize.large};\r\n    margin-right: ${size.small};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonSubmit = styled.button`\r\n  width: 100%;\r\n  background: ${color.primary};\r\n  padding: ${size.medium};\r\n  border: ${size.micro} solid ${color.primary};\r\n  border-radius: ${size.smallest};\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  span {\r\n    color: ${color.white};\r\n    font-size: ${fontSize.medium};\r\n    font-weight: 500;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${color.white};\r\n    border: ${size.micro} solid ${color.primary};\r\n    span {\r\n      color: ${color.primaryDarker};\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AccountButton = ({ onClick, content }) => {\r\n  return <Button onClick={onClick}>{content}</Button>;\r\n};\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  height: 36px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: #8263cc;\r\n  &:hover {\r\n    background-color: #6243aa;\r\n  }\r\n  color: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default AccountButton;\r\n","export const DATA_PER_PAGE = 7;\r\nexport const GET_USER_STORAGE_KEYWORD = 'data';\r\nexport const ONE_WAY_MIN_PAGE_NUM = 3;\r\nexport const STORAGE_DATA = {\r\n  users: 'users',\r\n};\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DATA_PER_PAGE, ONE_WAY_MIN_PAGE_NUM } from 'utils/config';\r\nimport { getTotalPageNum } from 'utils/getTotalPageNum';\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n\r\n  & p {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst PageUl = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst PageLi = styled.li`\r\n  color: ${(props) => (props.active ? '#87bf44' : 'black')};\r\n  text-decoration: ${(props) => (props.active ? 'underline' : 'none')};\r\n  margin: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Pagination = ({ totalDataNum, paginate, currentPage }) => {\r\n  const [pageLists, setPageLists] = useState([]);\r\n  const totalPageNum = useMemo(() => getTotalPageNum(totalDataNum, DATA_PER_PAGE), [totalDataNum]);\r\n\r\n  useEffect(() => {\r\n    const totalPageList = Array.from({ length: totalPageNum }, (v, i) => i + 1);\r\n\r\n    if (currentPage <= ONE_WAY_MIN_PAGE_NUM) {\r\n      const displayedPageList = totalPageList.slice(0, currentPage + ONE_WAY_MIN_PAGE_NUM - 1);\r\n      setPageLists(displayedPageList);\r\n    } else if (currentPage > ONE_WAY_MIN_PAGE_NUM) {\r\n      const displayedPageList = totalPageList.slice(\r\n        currentPage - ONE_WAY_MIN_PAGE_NUM,\r\n        currentPage + ONE_WAY_MIN_PAGE_NUM - 1,\r\n      );\r\n      setPageLists(displayedPageList);\r\n    }\r\n  }, [totalPageNum, currentPage]);\r\n\r\n  const goEdgePage = useCallback(\r\n    (edgePage) => {\r\n      paginate(edgePage);\r\n    },\r\n    [paginate],\r\n  );\r\n\r\n  const goNextToPage = useCallback(\r\n    (nextToPage) => {\r\n      if (nextToPage < 1 || nextToPage > totalPageNum) return;\r\n      paginate(nextToPage);\r\n    },\r\n    [paginate, totalPageNum],\r\n  );\r\n\r\n  return (\r\n    <PaginationContainer>\r\n      <p onClick={() => goEdgePage(1)}>{'|<'}</p>\r\n      <p onClick={() => goNextToPage(currentPage - 1)}>{'<'}</p>\r\n      <PageUl>\r\n        {pageLists.map((number) => (\r\n          <PageLi key={number} active={currentPage === number}>\r\n            <p onClick={() => paginate(number)}>{number}</p>\r\n          </PageLi>\r\n        ))}\r\n      </PageUl>\r\n      <p onClick={() => goNextToPage(currentPage + 1)}>{'>'}</p>\r\n      <p onClick={() => goEdgePage(totalPageNum)}>{'>|'}</p>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const getTotalPageNum = (totalUserData, DataPerPage) => {\r\n  return Math.ceil(totalUserData / DataPerPage);\r\n};\r\n","const AccountSearchIcon = () => (\r\n  <svg xmlns='https://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'>\r\n    <defs>\r\n      <path\r\n        id='qt2dnsql4a'\r\n        d='M15.727 17.273a.563.563 0 10.796-.796l-4.875-4.875-.19-.165a.563.563 0 00-.764.028 5.063 5.063 0 111.261-2.068.562.562 0 101.073.338 6.188 6.188 0 10-1.943 2.894l4.642 4.644z'></path>\r\n    </defs>\r\n    <g fill='none' fillRule='evenodd'>\r\n      <use fill='#333' fillRule='nonzero' stroke='#333' strokeWidth='.3' href='#qt2dnsql4a'></use>\r\n    </g>\r\n  </svg>\r\n);\r\nexport default AccountSearchIcon;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchIcon from '../styles/icons/SearchIcon';\r\n\r\nconst SearchBox = ({ setUserData, copiedData }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const onInputValue = useCallback((e) => {\r\n    const word = e.target.value;\r\n    setInputValue(word);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (inputValue !== '') {\r\n      const valueLen = inputValue.length;\r\n      const filterdData = copiedData.filter(\r\n        (data) => data.name.substring(0, valueLen) === inputValue,\r\n      );\r\n      if (filterdData.length > 0) setUserData(filterdData);\r\n    } else {\r\n      setUserData(copiedData);\r\n    }\r\n  }, [inputValue, setUserData, copiedData]);\r\n\r\n  return (\r\n    <SearchBoxContainer>\r\n      <SearchInput\r\n        placeholder='이름을 입력해주세요.'\r\n        onChange={onInputValue}\r\n        type='text'\r\n        value={inputValue}\r\n      />\r\n      <SearchButton>\r\n        <SearchIcon />\r\n      </SearchButton>\r\n    </SearchBoxContainer>\r\n  );\r\n};\r\n\r\nexport const SearchBoxContainer = styled.div`\r\n  width: 100%;\r\n  height: 36px;\r\n  margin-bottom: 12px;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  color: #333;\r\n`;\r\n\r\nconst SearchButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n  top: unset;\r\n  width: 36px;\r\n  height: 36px;\r\n  padding: 0;\r\n  background-color: #aac14f;\r\n  border-radius: 0 6px 6px 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: calc(100% - 36px);\r\n  height: 36px;\r\n  padding: 8px 12px;\r\n  border: 1px solid #aac14f;\r\n  border-radius: 6px 0 0 6px;\r\n  :focus {\r\n    outline: 0;\r\n  }\r\n  background-color: #fff;\r\n`;\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst TableData = ({ TableData }) => {\r\n  return (\r\n    <>\r\n      {TableData\r\n        ? TableData.map((data) => (\r\n            <tr key={data.id}>\r\n              <td>{data.id}</td>\r\n              <td>{data.name}</td>\r\n              <td>{data.age}</td>\r\n              <td>{data.address}</td>\r\n              <td>{data.cardNumber}</td>\r\n              <td>{data.userType}</td>\r\n            </tr>\r\n          ))\r\n        : null}\r\n    </>\r\n  );\r\n};\r\nexport default TableData;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Pagination from './Pagination';\r\nimport TableData from './TableData';\r\nimport { currentUsers } from '../utils/currentUsers';\r\nimport { DATA_PER_PAGE } from '../utils/config';\r\n\r\nconst UserTable = ({ userData }) => {\r\n  const [currentUserData, setCurrentUserData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [firstIndex, setFirstIndex] = useState(null);\r\n  const [lastIndex, setLastIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const nextLastIndex = currentPage * DATA_PER_PAGE;\r\n    const nextFirstIndex = nextLastIndex - DATA_PER_PAGE;\r\n\r\n    setLastIndex(nextLastIndex);\r\n    setFirstIndex(nextFirstIndex);\r\n  }, [currentPage, lastIndex]);\r\n\r\n  useEffect(() => {\r\n    setCurrentUserData(currentUsers(userData, firstIndex, lastIndex));\r\n  }, [userData, firstIndex, lastIndex]);\r\n\r\n  if (userData.length === 0) {\r\n    return <p>데이터가 비어 있습니다.</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <thead>\r\n          <tr>\r\n            <th>아이디</th>\r\n            <th>이름</th>\r\n            <th>나이</th>\r\n            <th>주소</th>\r\n            <th>카드 번호</th>\r\n            <th>권한</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <TableData TableData={currentUserData} />\r\n        </tbody>\r\n      </TableContainer>\r\n      <Pagination\r\n        totalDataNum={userData.length}\r\n        currentPage={currentPage}\r\n        paginate={setCurrentPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableContainer = styled.table`\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  min-width: 650px;\r\n  width: 100%;\r\n\r\n  & tr,\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport default UserTable;\r\n","// data는 배열, indexOfFirst는 list의 첫 번째 index, indexOfLast는 list의 마지막 index\r\n\r\nexport const currentUsers = (data, indexOfFirst, indexOfLast) => {\r\n  const currentPageUsers = data.slice(indexOfFirst, indexOfLast);\r\n\r\n  return currentPageUsers;\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Graph = () => (\r\n  <Container>\r\n    <Title>그래프1</Title>\r\n    <Title>그래프2</Title>\r\n    <Title>그래프3</Title>\r\n  </Container>\r\n);\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Title = styled.h1`\r\n  width: 100%;\r\n  padding: 16px 0;\r\n`;\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Navbar = ({ user }) => {\r\n  const menuList = ['공통메뉴1', '공통메뉴2', '공통메뉴3'];\r\n\r\n  return (\r\n    <NavWrap>\r\n      <NavContainer>\r\n        <NavContent>\r\n          <LogoImg />\r\n          <MenuList>\r\n            {menuList.map((menu, key) => (\r\n              <Menu key={key}>{menu}</Menu>\r\n            ))}\r\n          </MenuList>\r\n          <Account>{user}</Account>\r\n        </NavContent>\r\n      </NavContainer>\r\n    </NavWrap>\r\n  );\r\n};\r\n\r\nconst NavWrap = styled.nav`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  color: #4a4a4a;\r\n  box-shadow: 1px 1px 1px #bababa;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n  width: 95%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst NavContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 8vh;\r\n  padding: 0 15px;\r\n`;\r\n\r\nconst LogoImg = styled.img.attrs({\r\n  src: 'images/jaranda-logo.png',\r\n})`\r\n  width: 80px;\r\n`;\r\n\r\nconst MenuList = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  flex: 5;\r\n`;\r\n\r\nconst Menu = styled.li`\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  :hover {\r\n    color: #aac14f;\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nconst Account = styled.div`\r\n  font-size: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { color, fontSize } from 'styles/styles';\r\nimport { SignIn, SignUp } from 'components';\r\n\r\nconst Login = () => (\r\n  <Container>\r\n    <Logo href='/user'>\r\n      <h2>Jaranda</h2>\r\n    </Logo>\r\n    <SignIn />\r\n    <SignUp />\r\n  </Container>\r\n);\r\n\r\nexport default Login;\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\n// change to Link\r\nconst Logo = styled.a`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n  transform: translate(15%, 50%);\r\n  cursor: pointer;\r\n\r\n  h2 {\r\n    color: ${color.white};\r\n    font-size: ${fontSize.larger};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const layouts = {\r\n  Wrap: styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n\r\n  Body: styled.body`\r\n    width: 95%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    background-color: white;\r\n    gap: 16px;\r\n  `,\r\n\r\n  Section: styled.section`\r\n    width: 100%;\r\n    flex: 8;\r\n  `,\r\n\r\n  Aside: styled.aside`\r\n    width: 100%;\r\n    flex: 2;\r\n    text-align: center;\r\n  `,\r\n\r\n  AccountButtonBox: styled.div`\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 12px;\r\n    margin-bottom: 12px;\r\n  `,\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    @font-face {\r\n    font-family: 'NanumSquareRound';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/NanumSquareRound.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    }\r\n    body{\r\n        font-family: 'NanumSquareRound', sans-serif;\r\n\r\n        &::-webkit-scrollbar {\r\n            display: none; /* Chrome, Safari, Opera*/\r\n        }\r\n    }\r\n    ol, ul, li {\r\n        list-style: none;\r\n    }\r\n    button{\r\n        border:none;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { layouts as S } from 'styles/layouts';\r\nimport GlobalStyles from 'styles/GlobalStyles';\r\nimport Navbar from 'components/Navbar';\r\n\r\nimport styled from 'styled-components';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst User = () => {\r\n  const [user, setUser] = useState('사용자1'); // user mock data\r\n  const [menuList, setMenuList] = useState(['menu1', 'menu2', 'menu3', 'menu4']); // menu mock data\r\n\r\n  useEffect(() => {\r\n    // 1. 비정상적인 url 접근 막기 & 메인화면으로 redirect\r\n    // 2. history에서 state : {user, menu} 받아서 setState\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <S.Wrap>\r\n        <Navbar user={user} />\r\n        <S.Body>\r\n          <S.Section>\r\n            <h1>어서오세요 사용자 페이지입니다</h1>\r\n          </S.Section>\r\n          <S.Aside>\r\n            <Button>Button</Button>\r\n            <MenuList>\r\n              {menuList.map((sideMenu, key) => (\r\n                <Menu key={key}>{sideMenu}</Menu>\r\n              ))}\r\n            </MenuList>\r\n          </S.Aside>\r\n        </S.Body>\r\n      </S.Wrap>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #aaaaaa;\r\n`;\r\n\r\nconst MenuList = styled.li`\r\n  width: 100%;\r\n  background-color: #bbbbbb;\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  width: 100%;\r\n  padding: 16px 0;\r\n`;\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { layouts as S } from 'styles/layouts';\r\nimport GlobalStyles from 'styles/GlobalStyles';\r\nimport Navbar from 'components/Navbar';\r\nimport Graph from 'components/Graph';\r\nimport UserTable from 'components/UserTable';\r\nimport AccountButton from 'components/AccountButton';\r\nimport SearchBox from 'components/SearchBox';\r\nimport { tempGetStorage, tempSetStorage } from 'utils/storage';\r\nimport { GET_USER_STORAGE_KEYWORD } from '../utils/config';\r\n\r\nconst Admin = () => {\r\n  // 페이지 관련 state (수정예정)\r\n  const [user, setUser] = useState('관리자A');\r\n  const [menu, setMenu] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // 테이블 관련 state\r\n  const [userData, setUserData] = useState([]);\r\n  const [copiedData, setCopiedData] = useState([]);\r\n\r\n  const onLogout = () => history.push('/');\r\n  const onCreateAccount = () => {}; // TODO 1. 회원가입 모달창 띄우기\r\n\r\n  useEffect(() => {\r\n    // TODO 2. 비정상적인 url 접근 막기 & 메인화면으로 redirect\r\n    // TODO 3. history에서 state : {user, menu} 받아서 setState\r\n\r\n    tempSetStorage();\r\n    setUserData(tempGetStorage(GET_USER_STORAGE_KEYWORD));\r\n    setCopiedData(tempGetStorage(GET_USER_STORAGE_KEYWORD));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <S.Wrap>\r\n        <Navbar user={user} />\r\n        <S.Body>\r\n          <S.Section>\r\n            <SearchBox userData={userData} setUserData={setUserData} copiedData={copiedData} />\r\n            <UserTable userData={userData} />\r\n          </S.Section>\r\n          <S.Aside>\r\n            <S.AccountButtonBox>\r\n              <AccountButton onClick={onCreateAccount} content='계정 생성' />\r\n              <AccountButton onClick={onLogout} content='로그아웃' />\r\n            </S.AccountButtonBox>\r\n            <Sidebar>\r\n              <Graph />\r\n            </Sidebar>\r\n          </S.Aside>\r\n        </S.Body>\r\n      </S.Wrap>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Sidebar = styled.div`\r\n  width: 100%;\r\n  background-color: #bbbbbb;\r\n`;\r\n\r\nexport default Admin;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport User from './pages/User';\r\nimport Admin from './pages/Admin';\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path='/' component={Login} />\r\n      <Route exact path='/signup' component={Signup} />\r\n      <Route exact path='/user' component={User} />\r\n      <Route exact path='/admin' component={Admin} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Routes from 'Routes';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Routes />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <GlobalStyles />\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}